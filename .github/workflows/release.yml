name: Release Build and Upload

on:
  push:
    tags:
      - 'v*.*.*' #

env:
  BINARY_NAME: mouse_tracking
  CARGO_TERM_COLOR: always

jobs:
  build_release_windows:
    name: Build Release (Windows - ${{ env.TARGET_WINDOWS }})
    runs-on: windows-latest

    permissions:
      contents: write 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Cache Cargo Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "windows-release-${{ env.TARGET_WINDOWS }}"

      - name: Build Release Binary for Target
        run: cargo build --verbose --release --locked --target ${{ env.TARGET_WINDOWS }}

      - name: Package for Release
        run: |
          Compress-Archive -Path target/${{ env.TARGET_WINDOWS }}/release/${{ env.BINARY_NAME }}.exe -DestinationPath ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ env.TARGET_WINDOWS }}.zip
        shell: powershell

      - name: List files 
        run: dir
        shell: cmd

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ env.TARGET_WINDOWS }}.zip # Match the packaged name